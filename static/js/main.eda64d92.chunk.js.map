{"version":3,"sources":["utils/firebase.ts","services/FirebaseService.ts","utils/currencies.ts","views/AccountForm.tsx","views/AccountList.tsx","views/AccountTransaction.tsx","views/AccountTransactionsList.tsx","views/components/EntryOrOut.tsx","views/AccountEntry.tsx","views/AccountOut.tsx","views/Home.tsx","utils/urls.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["firebaseDatabase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","FirebaseService","getDataList","nodePath","callback","query","ref","on","dataSnapshot","snap","val","newData","Object","keys","forEach","key","push","pushData","node","objToSubmit","id","set","remove","concat","getUniqueDataBy","once","then","updateData","obj","objectSpread","currencies","code","singular","plural","InitialState","loading","description","balances","Array","currency","value","AccountsForm","state","componentWillMount","_this","getDate","props","match","params","data","setState","onAddBalance","_this$state","handleAdd","submit","event","preventDefault","_this$state2","newId","history","_this2","this","_this$state3","react_default","a","createElement","Fragment","core","style","marginLeft","marginRight","marginTop","variant","component","onSubmit","clear","float","display","type","label","fullWidth","required","onChange","e","target","color","alignItems","htmlFor","width","find","inputProps","name","map","option","onClick","length","align","balance","_ref","l10n","Intl","NumberFormat","format","Component","AccountList","accounts","viewList","onSearch","filter","indexOf","placeholder","cellHeight","cols","account","margin","withWidth","AccountTransaction","from","to","accountFrom","accountTo","newBalancesTo","newBalancesFrom","transactions","date","Date","toISOString","sended","received","out","entry","oldBalancesTo","some","promises","Promise","all","displayEmpty","disabled","AccountTransactionsList","reduce","acc","console","log","padding","transaction","index","isEntry","complement","AccountEntry","EntryOrOut_AccountTransaction","assign","AccountOut","Home","urls","path","accountsEdit","App","position","marginBottom","aria-label","react_router_dom","Menu_default","react_router","exact","render","views_Home","AccountForm","views_AccountList","AccountTransaction_AccountTransaction","views_AccountTransactionsList","AccountEntry_AccountEntry","AccountOut_AccountOut","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eda64d92.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst config = {\n  apiKey: \"AIzaSyAAEydqTs7fZg30Q4JRcqYG99ttG4QwiwE\",\n  authDomain: \"monetary-47f4a.firebaseapp.com\",\n  databaseURL: \"https://monetary-47f4a.firebaseio.com\",\n  projectId: \"monetary-47f4a\",\n  storageBucket: \"monetary-47f4a.appspot.com\",\n  messagingSenderId: \"324201016162\",\n  appId: \"1:324201016162:web:3eb5ffcbf1fdad7f\"\n};\n\nexport const firebaseImpl = firebase.initializeApp(config);\nexport const firebaseDatabase = firebase.database();","import { firebaseDatabase } from '../utils/firebase';\n\nexport default class FirebaseService {\n  static getDataList = (nodePath: string, callback: Function) => {\n\n    const query = firebaseDatabase.ref(nodePath);\n\n    query.on('value', (dataSnapshot) => {\n      const snap = dataSnapshot.val();\n      const newData: any = [];\n      const keys = Object.keys(snap || {});\n      keys.forEach((key) => {\n        newData.push(snap[key]);\n      });\n      callback(newData);\n    });\n\n    return query;\n  };\n\n  static pushData = (node: string, objToSubmit: any) => {\n    const ref = firebaseDatabase.ref(node).push();\n    const id = ref.key;\n    ref.set(objToSubmit);\n    return id;\n  };\n\n  static remove = (id: string, node: string) => {\n    return firebaseDatabase.ref(`${node}/${id}`).remove();\n  };\n\n  static getUniqueDataBy = (node: string, id: string, callback: Function) => {\n    const ref = firebaseDatabase.ref(node + '/' + id);\n    let newData: any = {};\n\n    ref.once('value', (dataSnapshot) => {\n      if (!dataSnapshot) {\n        callback(null);\n        return;\n      }\n      const snap = dataSnapshot.val();\n      const keys = Object.keys(snap || {});\n      keys.forEach((key) => {\n        newData[key] = snap[key]\n      });\n    }).then(() => {\n      callback(newData);\n    });\n  };\n\n  static updateData = (id: string, node: string, obj: any) => {\n    return firebaseDatabase.ref(`${node}/${id}`).set({ ...obj });\n  };\n}\n","export default [\n  {\n    code: 'USD',\n    singular: 'Dólar Americano',\n    plural: 'Dólares Americano',\n  }, {\n    code: 'BRL',\n    singular: 'Real',\n    plural: 'Reais',\n  }, {\n    code: 'EUR',\n    singular: 'Euro',\n    plural: 'Euros',\n  }, {\n    code: 'ARS',\n    singular: 'Peso Argentino',\n    plural: 'Pesos Argentino',\n  }, {\n    code: 'CAD',\n    singular: 'Dólar Canadense',\n    plural: 'Dólares Canadense',\n  }, {\n    code: 'GBP',\n    singular: 'Libra Esterlina',\n    plural: 'Libras Esterlina',\n  },\n]","import React, { Component } from 'react';\nimport { Button, TextField, Typography, Card, CardContent, Select, MenuItem, InputLabel, Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core/index\";\nimport FirebaseService from \"../services/FirebaseService\";\nimport currencies from '../utils/currencies';\n\ninterface Balance {\n  code: string\n  value: number\n}\n\ninterface Currency {\n  code: string\n  singular: string\n}\n\ninterface State {\n  id?: string | null\n  description: string\n  balances: Array<Balance>\n  currency: Currency\n  value: number,\n  loading: boolean,\n}\n\ninterface Props {\n  match?: any\n  history?: any\n}\n\nconst InitialState = { loading: true, id: null, description: '', balances: new Array<Balance>(), currency: { code: '', singular: '' }, value: 0 };\n\nclass AccountsForm extends Component<Props, State> {\n\n  public readonly state = InitialState\n\n  componentWillMount = () => {\n    this.getDate();\n  };\n\n  getDate = () => {\n    const { id } = this.props.match.params;\n    if (id) {\n      FirebaseService.getUniqueDataBy('accounts', id, (data: any) => {\n        this.setState({ ...data, id, currency: { code: '', singular: '' }, value: 0, loading: false });\n      });\n    } else {\n      this.setState({ loading: false });\n    }\n  }\n\n  onAddBalance = () => {\n    const { value, currency, balances } = this.state;\n    this.setState({ balances: balances.concat([{ value: value, code: currency.code }]) }, this.handleAdd);\n  }\n\n  submit = (event: any) => {\n    event.preventDefault();\n    this.handleAdd();\n  };\n\n  handleAdd = () => {\n    const { id, description, balances } = this.state;\n\n    if (!!id) {\n      FirebaseService.updateData(id, 'accounts', {\n        id,\n        description,\n        balances,\n      }).then(this.getDate);\n    } else {\n      const newId = FirebaseService.pushData('accounts', {\n        description,\n        balances,\n      });\n      this.props.history.push(`/account/${newId}`);\n    }\n  }\n\n  render() {\n    const { id, description, currency, value, balances, loading } = this.state;\n    const code = currency.code || '';\n\n    if (loading) return null;\n\n    return (\n      <React.Fragment>\n        <Card style={{ marginLeft: '2%', marginRight: '2%', marginTop: '2%' }}>\n          <CardContent>\n            <Typography variant=\"headline\" component=\"h2\">{!!id ? `Editar a conta '${description}'` : 'Adicionar nova conta'}</Typography>\n\n            <form onSubmit={this.submit}>\n              <TextField\n                style={{\n                  clear: 'left',\n                  float: 'left',\n                  display: 'inline-block',\n                  marginTop: '2vh !important',\n                }}\n                type=\"text\"\n                value={description}\n                label=\"Descrição\"\n                fullWidth\n                required\n                onChange={e => this.setState({ description: e.target.value })} />\n\n              <Button type=\"submit\" color='primary'\n                style={{ marginTop: '20px', display: 'inline-block' }}>\n                {!!id ? 'Editar conta' : 'Adicionar conta'}\n              </Button>\n            </form>\n          </CardContent>\n        </Card>\n        {!!id && (\n          <Card style={{ marginLeft: '2%', marginRight: '2%', marginTop: '2%' }}>\n            <CardContent>\n              <Typography variant=\"headline\" component=\"h2\">Adicionar saldo</Typography>\n              <div style={{ display: 'flex', alignItems: 'baseline' }}>\n                <InputLabel htmlFor=\"currency-select\">Moeda</InputLabel>\n                <Select\n                  style={{ width: 200, marginRight: 8 }}\n                  value={code}\n                  onChange={e => {\n                    const currency = currencies.find(currency => currency.code === e.target.value);\n                    if (currency) {\n                      this.setState({ currency: { code: currency.code, singular: currency.singular } });\n                    }\n                  }}\n                  inputProps={{\n                    name: 'currency',\n                    id: 'currency-select',\n                  }}\n                >\n                  <MenuItem value=\"\">\n                    <em>Selecione uma moeda</em>\n                  </MenuItem>\n                  {currencies.map(option => (\n                    <MenuItem value={option.code}>\n                      {option.singular}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <TextField\n                  type=\"number\"\n                  value={value}\n                  label=\"Saldo\"\n                  required\n                  onChange={e => this.setState({ value: +e.target.value })} />\n              </div>\n              <Button onClick={this.onAddBalance} color='primary' style={{ marginTop: '20px', display: 'inline-block' }}>\n                Adicionar\n              </Button>\n            </CardContent>\n          </Card>\n        )}\n        {!!balances.length && (\n          <Card style={{ marginLeft: '2%', marginRight: '2%', marginTop: '2%' }}>\n            <CardContent>\n              <Typography variant=\"headline\" component=\"h2\">Saldos vinculados na conta</Typography>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Moeda</TableCell>\n                    <TableCell align=\"right\">Saldo</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {balances.map(balance => {\n                    const currency = currencies.find(({ code }) => code === balance.code);\n                    const l10n = new Intl.NumberFormat(\"pt-BR\", { style: \"currency\", currency: balance.code })\n                    return (\n                      <TableRow key={balance.code}>\n                        <TableCell align=\"left\">\n                          {!!currency && currency.singular}\n                        </TableCell>\n                        <TableCell align=\"right\">{l10n.format(balance.value)}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AccountsForm;\n","import React, { Component } from 'react';\nimport { GridList, GridListTile, Card, CardContent, Typography, Input, Button } from \"@material-ui/core/index\";\nimport withWidth from '@material-ui/core/withWidth';\nimport FirebaseService from \"../services/FirebaseService\";\n\ninterface Balance {\n  code: string\n  value: number\n}\n\ninterface Account {\n  id: string\n  description: string\n  balances: Array<Balance>\n}\n\ninterface State {\n  accounts: Array<Account>\n  viewList: Array<Account>\n  loading: boolean\n}\n\nclass AccountList extends Component<any, State> {\n\n  public readonly state = { accounts: new Array<Account>(), viewList: new Array<Account>(), loading: true }\n\n  componentWillMount = () => {\n    FirebaseService.getDataList('accounts', (data: any) => {\n      this.setState({ accounts: data, viewList: data, loading: false });\n    });\n  };\n\n  onSearch = (event: any) => {\n    const { accounts } = this.state;\n    if (event && event.target && event.target.value) {\n      this.setState({ viewList: accounts.filter(({ description }) => description.indexOf(event.target.value) >= 0) });\n    } else {\n      this.setState({ viewList: accounts });\n    }\n  }\n\n  render() {\n    const { viewList, loading } = this.state;\n    if (loading) return null;\n\n    const getGridListCols = () => {\n      if (this.props.width === 'xs') {\n        return 4;\n      }\n      if (this.props.width === 'sm') {\n        return 2;\n      }\n      if (this.props.width === 'md') {\n        return 2;\n      }\n      return 1;\n    }\n\n    return (\n      <React.Fragment>\n        <Input type='search' placeholder=\"Buscar...\" style={{ marginLeft: '10%', marginRight: '10%', width: '80%' }} onChange={e => this.onSearch(e)} />\n        <GridList cellHeight={150} cols={4}>\n          {viewList.map((account: Account) => (\n            <GridListTile key={account.id} cols={getGridListCols()}>\n              <Card style={{ margin: 16 }}>\n                <CardContent>\n                  <Typography variant=\"headline\" component=\"h2\">{account.description}</Typography>\n                  <Typography>{`Moedas: ${account.balances.length}`}</Typography>\n                  <Button color='inherit' onClick={() => this.props.history.push(`/account/${account.id}`)}>Editar</Button>\n                  <Button color='primary' onClick={() => this.props.history.push(`/account-transactions-list/${account.id}`)}>Ver transações</Button>\n                </CardContent>\n              </Card>\n            </GridListTile>\n          ))}\n        </GridList>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withWidth()(AccountList);","import React, { Component } from 'react';\nimport { Button, TextField, Typography, Card, CardContent, Select, MenuItem } from \"@material-ui/core/index\";\nimport FirebaseService from \"../services/FirebaseService\";\nimport currencies from '../utils/currencies';\n\ninterface Transaction {\n  date: string\n  description: string\n  value: number\n  currency: string\n  to: string\n  from: string\n  sended: boolean\n  out: boolean\n  entry: boolean\n  received: boolean\n}\n\ninterface Balance {\n  code: string\n  value: number\n  transactions: Array<Transaction>\n}\n\ninterface Account {\n  id: string\n  description: string\n  balances: Array<Balance>\n}\n\ninterface State {\n  accounts: Array<Account>\n  loading: boolean\n  from: string\n  to: string\n  currency: string\n  description: string\n  value: number\n}\n\nexport default class AccountTransaction extends Component<any, State> {\n\n  public readonly state = { loading: true, accounts: new Array<Account>(), from: '', to: '', value: 0, description: '', currency: '' }\n\n  componentWillMount = () => {\n    FirebaseService.getDataList('accounts', (data: any) => {\n      this.setState({ accounts: data, loading: false });\n    });\n  };\n\n  submit = (event: any) => {\n    event.preventDefault();\n    const { accounts, from, to, description, value, currency } = this.state;\n    const accountFrom = accounts.find(account => account.id === from);\n    const accountTo = accounts.find(account => account.id === to);\n\n    if (accountFrom && accountTo) {\n      const oldBalancesFrom = accountFrom.balances || new Array<Balance>();\n      const newBalancesFrom = oldBalancesFrom.map(balance => {\n        if (balance.code === currency) {\n          const transactions = balance.transactions || new Array<Transaction>();\n          return {\n            ...balance,\n            value: balance.value - value,\n            transactions: transactions.concat([{ date: new Date().toISOString(), sended: true, received: false, out: false, entry: false, value, currency, to, from, description }])\n          }\n        }\n        return balance;\n      });\n\n      const oldBalancesTo = accountTo.balances || new Array<Balance>();\n      let newBalancesTo;\n      if (oldBalancesTo.some(balance => balance.code === currency)) {\n        newBalancesTo = oldBalancesTo.map(balance => {\n          if (balance.code === currency) {\n            const transactions = balance.transactions || new Array<Transaction>();\n            return {\n              ...balance,\n              value: balance.value + value,\n              transactions: transactions.concat([{ date: new Date().toISOString(), sended: false, received: true, out: false, entry: false, value, currency, to, from, description }])\n            }\n          }\n          return balance;\n        });\n      } else {\n        newBalancesTo = oldBalancesTo.concat([{\n          value,\n          code: currency,\n          transactions: [{ date: new Date().toISOString(), sended: false, received: true, out: false, entry: false, value, currency, to, from, description }]\n        }])\n      }\n      const promises = [\n        FirebaseService.updateData(from, 'accounts', {\n          ...accountFrom,\n          balances: newBalancesFrom,\n        }),\n        FirebaseService.updateData(to, 'accounts', {\n          ...accountTo,\n          balances: newBalancesTo,\n        }),\n      ];\n      Promise.all(promises).then(() => this.props.history.push('/accounts/'));\n    }\n  };\n\n  render() {\n\n    const { loading, accounts, from, to, currency, value, description } = this.state;\n\n    const account = !!from && accounts.find(account => account.id === from);\n    const balances = account && account.balances ? account.balances : [];\n\n    if (loading) return null;\n\n    return (\n      <React.Fragment>\n        <Card style={{ marginLeft: '2%', marginRight: '2%', marginTop: '2%' }}>\n          <CardContent>\n            <Typography variant=\"headline\" component=\"h2\">Criar transação entre contas</Typography>\n            <form onSubmit={this.submit}>\n              <Select\n                value={from}\n                onChange={e => this.setState({ from: e.target.value, to: '', currency: '' })}\n                displayEmpty\n                fullWidth\n                name=\"De\"\n                style={{\n                  marginTop: 16,\n                }}\n              >\n                <MenuItem value=\"\">\n                  <em>Selecione a conta que irá enviar</em>\n                </MenuItem>\n                {accounts.map(account => (\n                  <MenuItem value={account.id}>\n                    {account.description}\n                  </MenuItem>\n                ))}\n              </Select>\n              <Select\n                value={to}\n                onChange={e => this.setState({ to: e.target.value })}\n                disabled={!from}\n                displayEmpty\n                fullWidth\n                name=\"De\"\n                style={{\n                  marginTop: 16,\n                }}\n              >\n                <MenuItem value=\"\">\n                  <em>Selecione a conta que irá receber</em>\n                </MenuItem>\n                {accounts.filter(account => account.id !== from).map(account => (\n                  <MenuItem value={account.id}>\n                    {account.description}\n                  </MenuItem>\n                ))}\n              </Select>\n              <Select\n                value={currency}\n                onChange={e => this.setState({ currency: e.target.value })}\n                disabled={!from}\n                displayEmpty\n                fullWidth\n                name=\"Moeda\"\n                style={{\n                  marginTop: 16,\n                }}\n              >\n                <MenuItem value=\"\">\n                  <em>Selecione a moeda da transação</em>\n                </MenuItem>\n                {balances.map(balance => {\n                  const l10n = new Intl.NumberFormat(\"pt-BR\", { style: \"currency\", currency: balance.code });\n                  const currency = currencies.find(currency => currency.code === balance.code);\n                  return (\n                    <MenuItem value={balance.code}>\n                      {`${currency ? currency.singular : balance.code} (Valor máximo: ${l10n.format(balance.value)})`}\n                    </MenuItem>\n                  )\n                })}\n              </Select>\n              <TextField\n                type=\"number\"\n                value={value}\n                label=\"Valor\"\n                fullWidth\n                required\n                style={{\n                  marginTop: 16,\n                }}\n                onChange={e => this.setState({ value: +e.target.value })} />\n              <TextField\n                type=\"text\"\n                value={description}\n                label=\"Descrição\"\n                fullWidth\n                required\n                style={{\n                  marginTop: 16,\n                }}\n                onChange={e => this.setState({ description: e.target.value })} />\n              <Button type=\"submit\" color='primary'\n                style={{ marginTop: '20px', display: 'inline-block' }}>\n                Transferir\n              </Button>\n            </form>\n          </CardContent>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Typography, Card, CardContent, GridListTile, GridList, Table, TableHead, TableBody, TableCell, TableRow } from \"@material-ui/core/index\";\nimport FirebaseService from \"../services/FirebaseService\";\nimport currencies from '../utils/currencies';\nimport withWidth from '@material-ui/core/withWidth';\n\ninterface Transaction {\n  date: Date\n  description: string\n  value: number\n  currency: string\n  to: string\n  from: string\n  sended: boolean\n  entry: boolean\n  out: boolean\n  received: boolean\n}\n\ninterface Balance {\n  code: string\n  value: number\n  transactions: Array<Transaction>\n}\n\ninterface Account {\n  id: string\n  description: string\n  balances: Array<Balance>\n}\ninterface State {\n  account: Account | null\n  loading: boolean\n}\n\nclass AccountTransactionsList extends Component<any, State> {\n\n  public readonly state = { account: null, loading: true }\n\n  componentWillMount = () => {\n    const { id } = this.props.match.params;\n\n    FirebaseService.getUniqueDataBy('accounts', id, (data: Account) => {\n      this.setState({ account: { ...data, id }, loading: false });\n    });\n  };\n\n  render() {\n    const { account, loading } = this.state;\n\n    if (loading || !account) return null;\n\n    const getGridListCols = () => {\n      if (this.props.width === 'xs') {\n        return 4;\n      }\n      if (this.props.width === 'sm') {\n        return 2;\n      }\n      if (this.props.width === 'md') {\n        return 2;\n      }\n      return 1;\n    }\n\n    const { balances } = account;\n    const transactions = (balances || []).reduce((acc, value: Balance) => acc.concat(value.transactions || []), new Array<Transaction>());\n    console.log(transactions);\n\n    return (\n      <React.Fragment>\n        <Typography style={{ padding: 8 }} variant=\"headline\" component=\"h2\">Moedas vincuadas a essa conta</Typography>\n        <GridList cellHeight={110} cols={4}>\n          {(balances || []).map((balance: Balance) => {\n            const l10n = new Intl.NumberFormat(\"pt-BR\", { style: \"currency\", currency: balance.code });\n            const currency = currencies.find(currency => currency.code === balance.code);\n            return (\n              <GridListTile key={balance.code} cols={getGridListCols()}>\n                <Card style={{ margin: 2 }}>\n                  <CardContent>\n                    <Typography variant=\"headline\" component=\"h2\">{currency ? currency.singular : balance.code}</Typography>\n                    <Typography>{`Valor: ${l10n.format(balance.value)}`}</Typography>\n                  </CardContent>\n                </Card>\n              </GridListTile>\n            );\n          })}\n        </GridList>\n        <Typography style={{ padding: 8 }} variant=\"headline\" component=\"h2\">Transações vinculadas com essa conta</Typography>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Data</TableCell>\n              <TableCell>Moeda</TableCell>\n              <TableCell>Valor</TableCell>\n              <TableCell>Tipo</TableCell>\n              <TableCell>Descrição</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {transactions.map((transaction: Transaction, index: number) => {\n              const l10n = new Intl.NumberFormat(\"pt-BR\", { style: \"currency\", currency: transaction.currency });\n              let type;\n              if (transaction.entry) type = 'Entrada';\n              if (transaction.out) type = 'Saída';\n              if (transaction.sended) type = 'Enviado';\n              if (transaction.received) type = 'Recebido';\n\n              return (\n                <TableRow key={transaction.currency + transaction.date + index}>\n                  <TableCell>{transaction.date}</TableCell>\n                  <TableCell>{transaction.currency}</TableCell>\n                  <TableCell>{l10n.format(transaction.value)}</TableCell>\n                  <TableCell>{type}</TableCell>\n                  <TableCell>{transaction.description}</TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withWidth()(AccountTransactionsList);\n","import React, { Component } from 'react';\nimport { Button, TextField, Typography, Card, CardContent, Select, MenuItem } from \"@material-ui/core/index\";\nimport FirebaseService from \"../../services/FirebaseService\";\nimport currencies from '../../utils/currencies';\n\ninterface Transaction {\n  date: string\n  description: string\n  value: number\n  currency: string\n  from: string\n  sended: boolean\n  out: boolean\n  entry: boolean\n  received: boolean\n}\n\ninterface Balance {\n  code: string\n  value: number\n  transactions: Array<Transaction>\n}\n\ninterface Account {\n  id: string\n  description: string\n  balances: Array<Balance>\n}\n\ninterface State {\n  accounts: Array<Account>\n  loading: boolean\n  from: string\n  currency: string\n  description: string\n  value: number\n}\n\ninterface Prop {\n  isEntry?: boolean\n  history?: any\n}\n\nexport default class AccountTransaction extends Component<Prop, State> {\n\n  public readonly state = { loading: true, accounts: new Array<Account>(), from: '', to: '', value: 0, description: '', currency: '' }\n\n  componentWillMount = () => {\n    FirebaseService.getDataList('accounts', (data: any) => {\n      this.setState({ accounts: data, loading: false });\n    });\n  };\n\n  submit = (event: any) => {\n    event.preventDefault();\n    const { accounts, from, description, value, currency } = this.state;\n    const { isEntry } = this.props;\n    const accountFrom = accounts.find(account => account.id === from);\n\n    if (accountFrom) {\n      const oldBalancesFrom = accountFrom.balances || new Array<Balance>();\n      const newBalancesFrom = oldBalancesFrom.map(balance => {\n        if (balance.code === currency) {\n          const transactions = balance.transactions || new Array<Transaction>();\n          return {\n            ...balance,\n            value: isEntry ? balance.value + value : balance.value - value,\n            transactions: transactions.concat([{ date: new Date().toISOString(), value, currency, from, description, sended: false, received: false,  entry: !!isEntry, out: !isEntry }])\n          }\n        }\n        return balance;\n      });\n\n      FirebaseService.updateData(from, 'accounts', {\n        ...accountFrom,\n        balances: newBalancesFrom,\n      }).then(() => this.props.history.push('/accounts/'));\n    }\n  };\n\n  render() {\n\n    const { loading, accounts, from, currency, value, description } = this.state;\n    const { isEntry } = this.props;\n\n    const account = !!from && accounts.find(account => account.id === from);\n    const balances = account && account.balances ? account.balances : [];\n\n    if (loading) return null;\n\n    return (\n      <React.Fragment>\n        <Card style={{ marginLeft: '2%', marginRight: '2%', marginTop: '2%' }}>\n          <CardContent>\n            <Typography variant=\"headline\" component=\"h2\">{!!isEntry ? 'Adicionar Entrada' : 'Adicioanr Saída'}</Typography>\n            <form onSubmit={this.submit}>\n              <Select\n                value={from}\n                onChange={e => this.setState({ from: e.target.value, currency: '' })}\n                displayEmpty\n                fullWidth\n                name=\"De\"\n                style={{\n                  marginTop: 16,\n                }}\n              >\n                <MenuItem value=\"\">\n                  <em>Selecione a conta</em>\n                </MenuItem>\n                {accounts.map(account => (\n                  <MenuItem value={account.id}>\n                    {account.description}\n                  </MenuItem>\n                ))}\n              </Select>\n              <Select\n                value={currency}\n                onChange={e => this.setState({ currency: e.target.value })}\n                disabled={!from}\n                displayEmpty\n                fullWidth\n                name=\"Moeda\"\n                style={{\n                  marginTop: 16,\n                }}\n              >\n                <MenuItem value=\"\">\n                  <em>Selecione a moeda</em>\n                </MenuItem>\n                {balances.map(balance => {\n                  const l10n = new Intl.NumberFormat(\"pt-BR\", { style: \"currency\", currency: balance.code });\n                  const currency = currencies.find(currency => currency.code === balance.code);\n                  const complement = !isEntry ? ` (Valor máximo: ${l10n.format(balance.value)})`: ''\n                  return (\n                    <MenuItem value={balance.code}>\n                      {`${currency ? currency.singular : balance.code}${complement}`}\n                    </MenuItem>\n                  )\n                })}\n              </Select>\n              <TextField\n                type=\"number\"\n                value={value}\n                label=\"Valor\"\n                fullWidth\n                required\n                style={{\n                  marginTop: 16,\n                }}\n                onChange={e => this.setState({ value: +e.target.value })} />\n              <TextField\n                type=\"text\"\n                value={description}\n                label=\"Descrição\"\n                fullWidth\n                required\n                style={{\n                  marginTop: 16,\n                }}\n                onChange={e => this.setState({ description: e.target.value })} />\n              <Button type=\"submit\" color='primary'\n                style={{ marginTop: '20px', display: 'inline-block' }}>\n                {!!isEntry ? 'Adicionar entrada' : 'Adicionar saída'}\n              </Button>\n            </form>\n          </CardContent>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nimport EntryOrOut from './components/EntryOrOut';\n\nexport default class AccountEntry extends Component {\n  render() {\n    return (\n      <EntryOrOut isEntry {...this.props} />\n    );\n  }\n}","import React, { Component } from 'react';\nimport EntryOrOut from './components/EntryOrOut';\n\nexport default class AccountOut extends Component {\n  render() {\n    return (\n      <EntryOrOut {...this.props} />\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Typography, Card, CardContent, CardActionArea} from \"@material-ui/core/index\";\n\ninterface Props {\n  history?: any\n}\n\nclass Home extends Component<Props> {\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card style={{ margin: '2%' }}>\n          <CardActionArea onClick={() => this.props.history.push('/monetary/account')}>\n            <CardContent>\n              <Typography variant=\"headline\" component=\"h2\">Cadastro de contas</Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n        <Card style={{ margin: '2%' }}>\n          <CardActionArea onClick={() => this.props.history.push('/monetary/accounts')}>\n            <CardContent>\n              <Typography variant=\"headline\" component=\"h2\">Listagem de contas</Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n        <Card style={{ margin: '2%' }}>\n          <CardActionArea onClick={() => this.props.history.push('/monetary/accounts-entry')}>\n            <CardContent>\n              <Typography variant=\"headline\" component=\"h2\">Cadastro de entrada</Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n        <Card style={{ margin: '2%' }}>\n          <CardActionArea onClick={() => this.props.history.push('/monetary/accounts-out')}>\n            <CardContent>\n              <Typography variant=\"headline\" component=\"h2\">Cadastro de saída</Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","export default {\n  home: { name: 'Home', path: '/monetary' },\n  accountsList: { name: 'AccountsList', path: '/monetary/accounts' },\n  accountsForm: { name: 'AccountsForm', path: '/monetary/account' },\n  accountsTransaction: { name: 'AccountsTransaction', path: '/monetary/accounts-transaction' },\n  accountTransactionsList: { name: 'AccountTransactionsList', path: '/monetary/account-transactions-list/:id' },\n  accountsEntry: { name: 'AccountsEntry', path: '/monetary/accounts-entry' },\n  accountsOut: { name: 'AccountsOut', path: '/monetary/accounts-out' },\n};\n\nexport const accountsEdit = {\n  name: 'AccountsEdit',\n  path: '/monetary/account/:id',\n}","import React from 'react';\nimport AccountForm from './views/AccountForm';\nimport AccountList from './views/AccountList';\nimport AccountTransaction from './views/AccountTransaction';\nimport AccountTransactionsList from './views/AccountTransactionsList';\nimport AccountEntry from './views/AccountEntry';\nimport AccountOut from './views/AccountOut';\nimport Home from './views/Home';\nimport urls, { accountsEdit } from './utils/urls';\nimport { Typography, IconButton, AppBar, Toolbar } from \"@material-ui/core/index\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Route, Link } from \"react-router-dom\";\n\nconst App: React.FC = () => {\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\" style={{ marginBottom: 16 }}>\n        <Toolbar>\n\n          <IconButton color=\"inherit\" aria-label=\"Menu\" component={(props) => (\n            <Link to='/monetary' {...props} />\n          )}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Controle financeiro\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Route exact\n        path={urls.home.path}\n        render={(props) => <Home {...props} />}\n      />\n\n      <Route exact\n        path={accountsEdit.path}\n        render={(props) => <AccountForm {...props} />}\n      />\n\n      <Route exact\n        path={urls.accountsList.path}\n        render={(props) => <AccountList {...props} />}\n      />\n\n      <Route exact\n        path={urls.accountsTransaction.path}\n        render={(props) => <AccountTransaction {...props} />}\n      />\n\n      <Route exact\n        path={urls.accountTransactionsList.path}\n        render={(props) => <AccountTransactionsList {...props} />}\n      />\n\n      <Route exact\n        path={urls.accountsEntry.path}\n        render={(props) => <AccountEntry {...props} />}\n      />\n\n      <Route exact\n        path={urls.accountsOut.path}\n        render={(props) => <AccountOut {...props} />}\n      />\n\n      <Route exact\n        path={urls.accountsForm.path}\n        render={(props) => <AccountForm {...props} />}\n      />\n    </React.Fragment >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport urls from \"./utils/urls\";\n\nReactDOM.render(\n  <Router>\n    <Route path={urls.home.path} component={App} />\n  </Router>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}